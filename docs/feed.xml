<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://192.168.1.100:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://192.168.1.100:4000/" rel="alternate" type="text/html" /><updated>2023-12-19T23:50:02-05:00</updated><id>http://192.168.1.100:4000/feed.xml</id><title type="html">hejohns’ jekyll site</title><subtitle>a pure waste of space</subtitle><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><entry><title type="html">icecc</title><link href="http://192.168.1.100:4000/2023/12/19/icecc.html" rel="alternate" type="text/html" title="icecc" /><published>2023-12-19T00:00:00-05:00</published><updated>2023-12-19T23:48:09-05:00</updated><id>http://192.168.1.100:4000/2023/12/19/icecc</id><content type="html" xml:base="http://192.168.1.100:4000/2023/12/19/icecc.html"><![CDATA[<p>It’s break and I’m cleaning up some computer stuff.</p>

<p>One thing I hadn’t gotten around to was setting up <a href="https://github.com/icecc/icecream">icecc</a>,
which seems like a more automated distcc.
I thought I’d have to write systemd services for <code class="language-plaintext highlighter-rouge">iceccd -d</code> and <code class="language-plaintext highlighter-rouge">icecc-scheduler -d</code> myself,
  but the debian package for icecc already does it for you<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>,
which I was quite pleased about.</p>

<p>So all it takes is</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">apt install icecc</code></li>
  <li><code class="language-plaintext highlighter-rouge">systemctl enable icecc-scheduler</code></li>
</ul>

<p>From what I can tell, <code class="language-plaintext highlighter-rouge">iceccd</code> and <code class="language-plaintext highlighter-rouge">icecc-scheduler</code> automagically form a local (sub)network-wide cluster, which can be viewed with <code class="language-plaintext highlighter-rouge">icecream-sundae</code>.</p>

<p>And of course, as the icecc README says, clients of the cluster need to
<code class="language-plaintext highlighter-rouge">export PATH=/usr/lib/icecc/bin:$PATH</code>.</p>

<p>That’s it.</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>As you can probably guess, we both named them <code class="language-plaintext highlighter-rouge">iceccd.service</code> and <code class="language-plaintext highlighter-rouge">icecc-scheduler.service</code>… <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[It’s break and I’m cleaning up some computer stuff.]]></summary></entry><entry><title type="html">preparing for my final presentation for descriptive set theory</title><link href="http://192.168.1.100:4000/2023/12/08/domain-theory-1.html" rel="alternate" type="text/html" title="preparing for my final presentation for descriptive set theory" /><published>2023-12-08T00:00:00-05:00</published><updated>2023-12-14T06:43:57-05:00</updated><id>http://192.168.1.100:4000/2023/12/08/domain-theory-1</id><content type="html" xml:base="http://192.168.1.100:4000/2023/12/08/domain-theory-1.html"><![CDATA[<h2 id="abramsky-and-jung"><a href="https://www.cs.bham.ac.uk/~axj/pub/papers/handy1.pdf">Abramsky and Jung</a></h2>
<p>(This is the corrected version of the chapter that appears in the
 Handbook of Logic in Computer Science v. 3)</p>
<h3 id="sec-1">sec 1</h3>
<ul>
  <li>motivations for domain theory
    <ul>
      <li>least fixpoints as meanings of recursive definitions</li>
      <li>``properly denotational” semantics of datatypes eg for the untyped λ-calculus</li>
    </ul>
  </li>
  <li>familiar results:
    <ul>
      <li>(Knaster-Tarski) every monotone function on a complete lattice has a least fixpoint</li>
      <li>(var.) every monotone function on a pointed directed-complete partial order has a least fixpoint</li>
    </ul>
  </li>
  <li>continuity as an algebraic approximation of computability</li>
  <li>partial information ordering</li>
  <li>one verison of higher recursion theory?
    <h3 id="sec-2">sec 2</h3>
  </li>
  <li>a poset is a dcpo ⟺ each chain has a supremum</li>
  <li>a pointed poset is a dcpo ⟺ every monotone map on it has a least fixpoint</li>
  <li>a function between dcpos is Scott-continous iff it is monotone and preserves directed joins</li>
  <li>a dcpo is continous iff it has a basis</li>
  <li>a dcpo is algebraic iff it has a basis of compact elements</li>
  <li>a dcpo is ω-continous iff ∃ ctbl basis</li>
  <li>a dcpo is ω-algebraic iff K(D) is a ctbl basis</li>
  <li>“domain” means a structure with a notion of convergence and approximation</li>
  <li>ω-chains v. directed sets
    <h3 id="sec-7">sec 7</h3>
  </li>
  <li></li>
</ul>

<h2 id="de-brecht">de Brecht?</h2>
<h3 id="sec-11">sec 11</h3>
<ul>
  <li>every ω-cts domain is quasi-polish, since every ctbly based locally compact sober space is quasi-polish</li>
  <li>TFAE for top X
    <ul>
      <li>X quasi-polish</li>
      <li>
\[X ≅\]
      </li>
      <li>
\[X ≅\]
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[Abramsky and Jung (This is the corrected version of the chapter that appears in the Handbook of Logic in Computer Science v. 3) sec 1 motivations for domain theory least fixpoints as meanings of recursive definitions ``properly denotational” semantics of datatypes eg for the untyped λ-calculus familiar results: (Knaster-Tarski) every monotone function on a complete lattice has a least fixpoint (var.) every monotone function on a pointed directed-complete partial order has a least fixpoint continuity as an algebraic approximation of computability partial information ordering one verison of higher recursion theory? sec 2 a poset is a dcpo ⟺ each chain has a supremum a pointed poset is a dcpo ⟺ every monotone map on it has a least fixpoint a function between dcpos is Scott-continous iff it is monotone and preserves directed joins a dcpo is continous iff it has a basis a dcpo is algebraic iff it has a basis of compact elements a dcpo is ω-continous iff ∃ ctbl basis a dcpo is ω-algebraic iff K(D) is a ctbl basis “domain” means a structure with a notion of convergence and approximation ω-chains v. directed sets sec 7]]></summary></entry><entry><title type="html">Logical Relations 1</title><link href="http://192.168.1.100:4000/logical/relations/2023/11/08/LR-1.html" rel="alternate" type="text/html" title="Logical Relations 1" /><published>2023-11-08T00:00:00-05:00</published><updated>2023-11-08T19:36:17-05:00</updated><id>http://192.168.1.100:4000/logical/relations/2023/11/08/LR-1</id><content type="html" xml:base="http://192.168.1.100:4000/logical/relations/2023/11/08/LR-1.html"><![CDATA[<p>These notes are for myself and will likely be unsatisfactory for anyone else.</p>

<p>In the mission to write some notes on LRs for other students,
and to get a sense for what ties the different approaches together,
I need to actually read the ``standard” tutorial materials on LRs,
to make a contribution– rather than repeating what’s already been said well.</p>

<p>Let’s start with [Lau Skorstengaard’s<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> tutorial](https://arxiv.org/pdf/1907.11133.pdf).</p>

<h2 id="general-remarks">general remarks</h2>
<h3 id="pre-comments">pre-comments</h3>
<p>The mathematical machinery seems minimal.
I believe this is an oft-referenced first reference/tutorial.</p>
<h3 id="post-comments">post-comments</h3>
<p>TODO: after reading</p>
<h2 id="1-introduction">1. Introduction</h2>
<ul>
  <li>The name LRs is from Plotkin ‘73, but the ``first” use of the method is attributed to Tait ‘67</li>
  <li>The name doesn’t really have any (composite) meaning.</li>
  <li>Maybe should’ve been called Type Indexed Inductive Relations<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup></li>
  <li>This tutorial is mostly based off Amal’s OPLSS ‘15 lectures– another standard resource.</li>
  <li>Take STLC as usual, first with only
\(τ \Coloneqq bool | τ → τ\),
with a (small-step) operational semantics,
and λs as values.</li>
  <li>“examples of properties that can be proven with a logical relation:”
    <ul>
      <li>termination (SN)</li>
      <li>type safety (in what sense?)</li>
      <li>program equivalences
        <ul>
          <li>correctness of programs (in what sense?)</li>
          <li>representation independence (what is this?)</li>
          <li>parametricity and free theorems (a la Wadler)</li>
          <li>security-typed languages, eg Information Flow Control (methinks a sort of Perl taint)</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>we split LRs into logical <em>predicates</em> and logical <em>relations</em>.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>Logical Predicates</th>
      <th>Logical Relations</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Unary</td>
      <td>Binary</td>
    </tr>
    <tr>
      <td>\(P_τ(e)\)</td>
      <td>\(R_τ(e_1, e_2)\)</td>
    </tr>
    <tr>
      <td>One Property</td>
      <td>Program Equivalence</td>
    </tr>
    <tr>
      <td>SN</td>
      <td> </td>
    </tr>
    <tr>
      <td>Type Safety</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<ul>
  <li>we start w/ logical predicates and generalize to logical relations.</li>
  <li>roughly speaking, we require the following of the (logical) predicate over expressions \(e\):<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup>
    <ul>
      <li>\(P(e) ⟹ ⋅ ⊢ e : τ\) (a footnote says this is relaxed to just require \(e\) be closed in type safety)</li>
      <li>\(P(e) ⟹ e\) actually has the property we care about</li>
      <li>\(P(e) ⟹ ∀ E^-[⋅]. P(E^-[e])\) where \(E^-\) is any elimination form (I can’t quite justify this abstractly, but indeed a general requirement)</li>
    </ul>
  </li>
</ul>

<h3 id="sn-of-stlc">SN of STLC</h3>
<p>Unlike a lot of first presentations, the operation rules only include the β rules,
so it’s not just a termination proof.</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>It looks like Lau was a student of Lars Birkedal, and this was written while they were a more senior student. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>But what about (un/uni)typed LRs? Let’s start with this simple story first. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p>I would make a comparison to Girard’s Reducibility criteria, if I knew it off the top of my head better. TODO for LR-2+ <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><category term="logical" /><category term="relations" /><summary type="html"><![CDATA[These notes are for myself and will likely be unsatisfactory for anyone else.]]></summary></entry><entry><title type="html">ble.sh</title><link href="http://192.168.1.100:4000/2023/11/07/ble-sh.html" rel="alternate" type="text/html" title="ble.sh" /><published>2023-11-07T00:00:00-05:00</published><updated>2023-11-07T01:32:11-05:00</updated><id>http://192.168.1.100:4000/2023/11/07/ble-sh</id><content type="html" xml:base="http://192.168.1.100:4000/2023/11/07/ble-sh.html"><![CDATA[<p>I just installed <a href="https://github.com/akinomyoga/ble.sh">ble.sh</a>
and wow is this nice.</p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[I just installed ble.sh and wow is this nice.]]></summary></entry><entry><title type="html">Live Reload</title><link href="http://192.168.1.100:4000/site-construction/2023/11/06/live-reload.html" rel="alternate" type="text/html" title="Live Reload" /><published>2023-11-06T00:00:00-05:00</published><updated>2023-11-07T01:31:33-05:00</updated><id>http://192.168.1.100:4000/site-construction/2023/11/06/live-reload</id><content type="html" xml:base="http://192.168.1.100:4000/site-construction/2023/11/06/live-reload.html"><![CDATA[<p>I’ve been writing posts without live reloading/preview
for some reason.
I think <code class="language-plaintext highlighter-rouge">--watch</code> didn’t work or something.</p>

<p>In any case, I just tried this while editing the homepage,
and it’s so nice, I had to make this post.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundler exec jekyll serve -l --lsi -H 192.168.1.100
</code></pre></div></div>

<p>Sometimes I have to manually refresh the browser page though
or else it gets stuck on a blank screen.</p>

<p>(And of course, check out the other <a href="/category/site-construction/">site-construction</a> posts)</p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><category term="site-construction" /><summary type="html"><![CDATA[I’ve been writing posts without live reloading/preview for some reason. I think --watch didn’t work or something.]]></summary></entry><entry><title type="html">coordinating processes</title><link href="http://192.168.1.100:4000/2023/10/29/coordinating-processes.html" rel="alternate" type="text/html" title="coordinating processes" /><published>2023-10-29T00:00:00-04:00</published><updated>2023-10-30T06:23:51-04:00</updated><id>http://192.168.1.100:4000/2023/10/29/coordinating-processes</id><content type="html" xml:base="http://192.168.1.100:4000/2023/10/29/coordinating-processes.html"><![CDATA[<p>This has to be a solved problem?!</p>

<p><a href="https://github.com/hejohns/systemp">repo</a></p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[This has to be a solved problem?!]]></summary></entry><entry><title type="html">tortoise text to speech (and piper)</title><link href="http://192.168.1.100:4000/2023/10/10/tortoise-tts.html" rel="alternate" type="text/html" title="tortoise text to speech (and piper)" /><published>2023-10-10T00:00:00-04:00</published><updated>2023-10-11T06:33:16-04:00</updated><id>http://192.168.1.100:4000/2023/10/10/tortoise-tts</id><content type="html" xml:base="http://192.168.1.100:4000/2023/10/10/tortoise-tts.html"><![CDATA[<h2 id="motivation">Motivation</h2>

<p>I’m getting my butt kicked by EECS 582.
We’re assigned four papers a week to read–
two for Tuesday, two for Thursday–
and it’s just too much to read with attention to detail.
But I don’t think the point <em>is</em> to read every paper in detail.
Or at least that’s not what I really want out of it.</p>

<p>This seems to me an exercise in how to quickly synthesize/accumulate/index
ideas and knowledge,
and how to summarize/distill it quickly.
(The paper reviews used to take me hours, but there just isn’t the time for that.
 I’ve been cramming it into ~45 minutes.)</p>

<p>As such, I’m looking for fast ways to get to the summary,
if that’s the end-goal, so to speak.
There’s some tips and tricks people will tell you when it comes to reading papers,
but I wanted to try something more aggressive.</p>

<h2 id="text-to-speech-tools">text to speech tools</h2>

<p>My eyes were feeling uncomfortable from (I have no medical backing to say this)
all the, well, load, of screen + reading time,
so the natural conclusion was to try <em>listening</em> to papers.</p>

<p>So I copy/pasted the entire paper pdf into a text file,
removed line breaks (eg “libr-\nary”),
and converted the text to audio with a tts tool.</p>

<p>Of course this requires that the paper has signifiant amounts of prose.
The papers we’re reading in 582 do<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> (and more on the effectiveness of the tts tools on papers below), but I have yet to try other areas.</p>

<p>I first tried some online tools, but wasn’t very satisfied.
I’m sure there are good services online though.</p>

<p>In any case, I ended up trying local text to speech tools,
and the two that I got working were:</p>
<ul>
  <li><a href="https://github.com/rhasspy/piper">piper</a></li>
  <li><a href="https://github.com/neonbjb/tortoise-tts">tortoise-tts</a></li>
</ul>

<p>(festival kept crashing, and I think I forgot to try eSpeak-ng.)</p>

<h3 id="piper">piper</h3>
<p>There’s not much to say.
Piper “just works”.
It’s fast– it can stream audio– and sounds good enough to listen to papers.
I’ve been using **cpu inference. I’m not sure if it supports gpu.</p>

<p>This is what I’ve actually been using since tortoise…
didn’t “just work” out of the box.</p>

<p>For some reason, the wav file piper produces isn’t readable on my sony icd,
so I had to ffmpeg it to an mp3.</p>
<h3 id="tortoise">tortoise</h3>
<p>Okay… this is the real reason I wrote this post.</p>

<p>The output quality of tortoise is fantastic.
Yes, it’s slow, but I’m willing to put up with it if it works–
just run it overnight/overnight + a day.
I have yet to really evaluate it as a paper reading tool, because I’ve been so bogged down trying to get it working.</p>

<h4 id="docker">docker</h4>
<p>First, <strong>cpu</strong> only:</p>

<p>The Dockerfile provided works with some small modifications
which others noted in the issue comments and a PR.
So I made a <a href="https://github.com/eecs582-andlars-hasinha-hejohns/tortoise-tts">fork</a>
with those patches.</p>

<p>tortoise hardcodes cuda in some places, so a couple patches are needed, but it does run with only cpu.
Just invoke <code class="language-plaintext highlighter-rouge">docker run</code> without <code class="language-plaintext highlighter-rouge">--gpus all</code>.</p>
<h4 id="gpu">gpu</h4>
<p>I have an nvidia mobile gpu on my desktop (the one from <a href="/2023/05/10/linux-graphics-modules.html">the post about nvidia kernel modules</a>,
so I thought I’d try to see how it compares to cpu tortoise,
which I’d been running on a dual xeon gold 6142.</p>

<p>It became issue after issue.</p>

<p>So first you have to install <code class="language-plaintext highlighter-rouge">nvidia-container-toolkit</code>.
Then when I added <code class="language-plaintext highlighter-rouge">--gpus all</code> back to tortoise’s <code class="language-plaintext highlighter-rouge">docker run</code>,
docker failed to pickup any gpus.</p>

<p>Okay… everything seemed fine with the gpu setup (<code class="language-plaintext highlighter-rouge">nvidia-smi</code> shows output, no systemd nvidia service errors like <a href="/2023/05/10/linux-graphics-modules.html">the post about nvidia kernel modules</a>),
except <code class="language-plaintext highlighter-rouge">nvidia-detect</code> errored out,
complaining about not being able to identify the debian version.</p>

<p>After a display of poor debugging skills, I finally looked at <code class="language-plaintext highlighter-rouge">vim $(which nvidia-detect)</code> and searched for the error message.
It turned out the nvidia-detect script just hardcodes some logic for each debian release,
and looks up the value in <code class="language-plaintext highlighter-rouge">/etc/debian_version</code> to dispatch one of the cases.
If <code class="language-plaintext highlighter-rouge">/etc/debian_version</code> doesn’t match any of the cases,
an error message prints about not being able to identify  the debian version.</p>

<p>Well, I have debian testing on my desktop, with
<code class="language-plaintext highlighter-rouge">cat /etc/debian_version</code><sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup> showing <code class="language-plaintext highlighter-rouge">trixie/sid</code>.
Which just wasn’t a case.
nvidia-detect only hardcoded up to bookworm/debian 12.</p>

<p>My best guess is that the proper fix is to just wait for a newer nvidia-detect.
But I wanted some more immediate closure, so I manually set <code class="language-plaintext highlighter-rouge">/etc/debian_version</code>
to “bookworm/12”, and everyone was happy.</p>

<p>Then docker <code class="language-plaintext highlighter-rouge">--gpus all</code> was finally happy, but tortoise still wasn’t using the gpu.
Another <em>insert search engine</em> adventure later about cuda versions
suggested that I did in fact have a card that supported cuda 12.0,
which should work with tortoise
(I think tortoise itself wanted cuda 11.7, and the Dockerfile wanted the nvidia cuda 12.2 docker image, which may have worked, but I downgraded it to 12.0 to match my host system).</p>

<p>Then the online oracles said to run <code class="language-plaintext highlighter-rouge">python -m torch.utils.collect_env</code>
to see what pytorch was up to.
And indeed, it showed that pytorch was <em>not</em> built with cuda.</p>

<p>I’m not sure why, given that the Dockerfile seems to install pytorch with cuda,
but in any case, there’s no shortage of hacks here, so the oracle said to
just <code class="language-plaintext highlighter-rouge">pip uninstall torch</code> and reinstall it with cuda, as per <a href="https://pytorch.org/get-started/locally/">the pytorch site</a>,
so I did,
and <code class="language-plaintext highlighter-rouge">python -m torch.utils.collect_env</code> changed to show that cuda was enabled.
This is all in a docker container, so I don’t actually mind how much of a hack this is.</p>

<p>With pytorch finally gpu enabled, I fired up tortoise for the nth time,
and it quickly died with a cuda out of memory error.</p>

<p>The cognoscenti may have noticed that I wanted to do this on a quadro M620
with 2GB ram.
Me being an ML-ignorant fool, didn’t think that that was insufficient.</p>

<p>Even with <code class="language-plaintext highlighter-rouge">batch_size = 1</code>, as small as possible<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup>,
tortoise still kept running out of memory.
From what I could find in the issue comments, 4GB is considered a small memory footprint, so it may be that tortoise simply cannot run on 2GB gpu ram.</p>

<p>So I finally got some closure, and four hours less sleep,
but on the plus side,
docker’s quite pleasant to use?</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>figures don’t meaningfully work if they do at all. They usually don’t get copied as text, and if some parts of the figure do, it’s all mangled. That said, captions <em>do</em> work, and are sometimes enough to get the general idea. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>what is this used for?? <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p>I’m assuming that means something to the ML-literate <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[Motivation]]></summary></entry><entry><title type="html">nic bonding</title><link href="http://192.168.1.100:4000/2023/08/03/nic-bonding.html" rel="alternate" type="text/html" title="nic bonding" /><published>2023-08-03T00:00:00-04:00</published><updated>2023-08-03T17:41:06-04:00</updated><id>http://192.168.1.100:4000/2023/08/03/nic-bonding</id><content type="html" xml:base="http://192.168.1.100:4000/2023/08/03/nic-bonding.html"><![CDATA[<ul>
  <li>nmtui</li>
  <li>edit a connection</li>
  <li>add</li>
  <li>type bond</li>
  <li>two slaves
    <ul>
      <li>idk why but it seems like you need to create two entirely new connections</li>
      <li>so deactivate the old connections before activating the bond</li>
    </ul>
  </li>
  <li>set primary device (eg <code class="language-plaintext highlighter-rouge">eno2</code>). This is the mac address used?</li>
  <li>status:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">nmcli con</code></li>
      <li><code class="language-plaintext highlighter-rouge">ip address</code></li>
    </ul>
  </li>
  <li>the mac address changes (not sure why), so you probably have to change the dhcp server settings to statically lease the old ip to the bond mac address</li>
</ul>

<p>redhat has some documentation online</p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[nmtui edit a connection add type bond two slaves idk why but it seems like you need to create two entirely new connections so deactivate the old connections before activating the bond set primary device (eg eno2). This is the mac address used? status: nmcli con ip address the mac address changes (not sure why), so you probably have to change the dhcp server settings to statically lease the old ip to the bond mac address]]></summary></entry><entry><title type="html">book catalogue</title><link href="http://192.168.1.100:4000/2023/07/24/book-catalogue.html" rel="alternate" type="text/html" title="book catalogue" /><published>2023-07-24T00:00:00-04:00</published><updated>2023-09-30T14:54:48-04:00</updated><id>http://192.168.1.100:4000/2023/07/24/book-catalogue</id><content type="html" xml:base="http://192.168.1.100:4000/2023/07/24/book-catalogue.html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#logic" id="markdown-toc-logic">logic</a>    <ul>
      <li><a href="#introductory-textbooks" id="markdown-toc-introductory-textbooks">introductory textbooks</a></li>
      <li><a href="#monographs" id="markdown-toc-monographs">monographs</a></li>
      <li><a href="#editorials-and-proceedings" id="markdown-toc-editorials-and-proceedings">editorials and proceedings</a></li>
      <li><a href="#misc" id="markdown-toc-misc">misc</a></li>
    </ul>
  </li>
  <li><a href="#computer-science" id="markdown-toc-computer-science">computer science</a>    <ul>
      <li><a href="#programming-languages" id="markdown-toc-programming-languages">programming languages</a></li>
      <li><a href="#other" id="markdown-toc-other">other</a></li>
    </ul>
  </li>
  <li><a href="#novels-and-related" id="markdown-toc-novels-and-related">novels and related</a></li>
  <li><a href="#wishlist" id="markdown-toc-wishlist">wishlist</a></li>
</ul>

<p>This evening, I made my largest single import of books to date.
A certain logician is moving to another university– upwards in the academic food chain–
and offered up some of their books for grabs.
I thought I should catalogue the lot, both for my own sake, and as a way to increase their utilization.
Personal libraries are great, but something is quite sad when you think about a book’s realized reading time v. how often it just sits on the shelf.
Or in my case, a box.</p>

<p>Extending this to my current collection, the below is a best effort catalogue of what I have.
Any listing is loanable– just ask.</p>

<p>Each section is roughly in decreasing order of rank, which is an opaque combination of whether I’ve read it, enjoyment, perceived reputation/reverence/significance, etc.</p>

<h2 id="logic">logic</h2>
<h3 id="introductory-textbooks">introductory textbooks</h3>
<ul>
  <li>set theory?</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Shoenfield</td>
          <td>Mathematical Logic</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Chang, Keisler</td>
          <td>Model Theory</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Mendelson</td>
          <td>Introduction to Mathematical Logic</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Hinman</td>
          <td>Fundamentals of Mathematical Logic</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Avigad</td>
          <td>Mathematical Logic and Computation</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Takeuti</td>
          <td>Proof Theory</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>phil?
    <h3 id="monographs">monographs</h3>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Kleene, Vesley</td>
          <td>The Foundation of Intuitionistic Mathematics</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Hinman</td>
          <td>Recursion-Theoretic Hierarchies</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Buss | Bounded Arithmetic
    <h3 id="editorials-and-proceedings">editorials and proceedings</h3>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>van Heijenoort</td>
          <td>From Frege to Gödel</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Heyting</td>
          <td>Constructivity in Mathematics</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Proceedings of the Herbrand Symposium Logic Colloquium ‘81
    <h3 id="misc">misc</h3>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Menzler-Trott</td>
          <td>Logic’s Lost Genius: The life of Gerhard Gentzen</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h2 id="computer-science">computer science</h2>
<h3 id="programming-languages">programming languages</h3>
<ul>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Harper</td>
          <td>Practical Foundations for Programming Languages</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Pierce | Advanced Types and Programming Languages
    <h3 id="other">other</h3>
  </li>
  <li>OSTEP</li>
</ul>

<h2 id="novels-and-related">novels and related</h2>
<ul>
  <li>tanizaki</li>
  <li>childhood years</li>
  <li>dazai</li>
</ul>

<h2 id="wishlist">wishlist</h2>
<p>ie books that I’ve read small bits of and are just so so good</p>

<ul>
  <li>Soare’s computability theory book</li>
  <li>Marker’s model theory book</li>
</ul>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author></entry><entry><title type="html">equivalence of categories</title><link href="http://192.168.1.100:4000/category-theory/2023/05/18/equivalence-of-categories.html" rel="alternate" type="text/html" title="equivalence of categories" /><published>2023-05-18T00:00:00-04:00</published><updated>2023-05-18T21:51:35-04:00</updated><id>http://192.168.1.100:4000/category-theory/2023/05/18/equivalence-of-categories</id><content type="html" xml:base="http://192.168.1.100:4000/category-theory/2023/05/18/equivalence-of-categories.html"><![CDATA[<p>An oft-stated characterization of an equivalence of categories is that TFAE:</p>
<ol>
  <li>A functor \(F : \mathcal{C} → \mathcal{D}\) is (the forward direction of) an equivalence of categories</li>
  <li>\(F\) is <em>full</em>, <em>faithful</em>, and <em>essentially surjective on objects</em><sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup></li>
</ol>

<p><strong>pf (1 ⟹ 2):</strong> (you really need to draw the diagrams. I’m not going to try here)</p>

<p>Let \(F : \mathcal{C} → \mathcal{D}\) be an equivalence of categories.</p>
<ul>
  <li>wts \(F\) faithful: assume \(Ff = Fg\), for \(f, g : \mathcal{C}(A, B)\).
Then \(F⁻¹Ff = F⁻¹Fg\).
Let \(α : 1_\mathcal{C} ⇒ F⁻¹F\) witness that F is an equivalence.
Notice that \(α_B ∘ f = F⁻¹Ff ∘ α_A ⟹ α_B ∘ f ∘ α⁻¹_A = F⁻¹Ff\),
and similarly \(α_B ∘ g = F⁻¹Fg ∘ α_A ⟹ α_B ∘ g ∘ α⁻¹_A = F⁻¹Fg\).
Thus \(F⁻¹Ff = F⁻¹Fg ⟹ F⁻¹Fg ∘ α_A ⟹ α_B ∘ f ∘ α⁻¹_A = F⁻¹Fg ∘ α_A ⟹ α_B ∘ g ∘ α⁻¹_A ⟹ f = g\).<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup></li>
</ul>

<ul>
  <li>wts \(F\) full: Consider \(h : \mathcal{D}(FA, FB)\).
Then \(α⁻¹_B ∘ F⁻¹h ∘ α_A : \mathcal{C}(A, B)\)
In a roundabout fashion, consider not \(F(α⁻¹_B ∘ F⁻¹h ∘ α_A)\) directly,
but \(F⁻¹F(α⁻¹_B ∘ F⁻¹h ∘ α_A)\).
Actually, our proof above that \(F\) is faithful is symmetric since an equivalence of categories is a symmetric notion, so \(F⁻¹\) is faithful as well.
Notice that \(F⁻¹F(α⁻¹_B ∘ F⁻¹h ∘ α_A) = α_B ∘ f ∘ α⁻¹_A = F⁻¹h\),
and since \(F⁻¹\) is faithful, \(F(α⁻¹_B ∘ F⁻¹h ∘ α_A) = h\).</li>
  <li>wts \(F\) eso:
Let \(β : FF⁻¹ ⇒ 1_\mathcal{D}\) be the other witness that \(\mathcal{C} ≅ \mathcal{D}\).
\(∀X ∈ \mathcal{D}. β_X\) witnesses that \(FF⁻¹X ≅ X\).</li>
</ul>

<p><strong>pf (2 ⟹ 1):</strong></p>

<p>Let \(F\) be fully faithful and eso.
Define \(F⁻¹\) st</p>

<p>TODO: I’m tired. This is Awodey p.174</p>

<p>Amalgamated from Awodey and Rhiel’s books, and the nlab</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>the definitions are standard, but the way I remember it is that <em>faithful</em> := injective on homsets, <em>full</em> := surjective on homsets, <em>eso</em> := surjective on objects, up to isomorphism <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>we make use of the fact that natural transformation ⟹ (natural isomorphism ⟺ each point is an isomorphism) <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><category term="category-theory" /><summary type="html"><![CDATA[An oft-stated characterization of an equivalence of categories is that TFAE: A functor \(F : \mathcal{C} → \mathcal{D}\) is (the forward direction of) an equivalence of categories \(F\) is full, faithful, and essentially surjective on objects1 the definitions are standard, but the way I remember it is that faithful := injective on homsets, full := surjective on homsets, eso := surjective on objects, up to isomorphism &#8617;]]></summary></entry></feed>