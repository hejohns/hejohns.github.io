<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-29T04:42:45-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">hejohns’ jekyll site</title><subtitle>a pure waste of space</subtitle><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><entry><title type="html">Mellanox ConnectX-4 10gbe</title><link href="http://localhost:4000/2024/01/16/mellanox.html" rel="alternate" type="text/html" title="Mellanox ConnectX-4 10gbe" /><published>2024-01-16T00:00:00-05:00</published><updated>2024-01-17T00:16:12-05:00</updated><id>http://localhost:4000/2024/01/16/mellanox</id><content type="html" xml:base="http://localhost:4000/2024/01/16/mellanox.html"><![CDATA[<p>A short post for now:</p>

<p>Got two Mellanox ConnectX-4 cards off ebay, and 10gtek dacs, and they all work!
Or at least iperf says they work at 10gbps.</p>

<p>One for the T130, and one for the Lenovo p720.</p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[A short post for now:]]></summary></entry><entry><title type="html">Thunderbird and Nix</title><link href="http://localhost:4000/2024/01/08/thunderbird-and-nix.html" rel="alternate" type="text/html" title="Thunderbird and Nix" /><published>2024-01-08T00:00:00-05:00</published><updated>2024-01-08T15:21:35-05:00</updated><id>http://localhost:4000/2024/01/08/thunderbird-and-nix</id><content type="html" xml:base="http://localhost:4000/2024/01/08/thunderbird-and-nix.html"><![CDATA[<p>This is the second time I’ve come across this issue,
and since it seems I’d forgotten about it after the first time,
I’m making a note here.</p>

<h2 id="context">Context</h2>
<p>I’m using nix, as installed by <code class="language-plaintext highlighter-rouge">apt</code> (on debian).
And thunderbird<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> is installed by nix,
to get the daily release<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>.</p>

<p>I’m using using the <a href="https://github.com/Frederick888/external-editor-revived">external-editor-revived</a>
plugin so I can write emails in vim.
The setup turns out to be a bit finicky with nix though.</p>

<h2 id="issue">Issue</h2>
<p>After <code class="language-plaintext highlighter-rouge">nix profile upgrade '.*'</code> ing thunderbird,
when I try to use the external editor,
I get the following errors<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup> as some sort of floating X11 dialog/notification box:</p>

<blockquote>
  <p>gvim: /nix/store/…/libc.so.6: version ‘GLIBC_2.38’ not found
(required by /nix/store/…-libcap-2.69-lib/lib/libcap.so.2).</p>

  <p>gvim: /nix/store/…/libc.so.6: version ‘GLIBC_2.38’ not found
(required by /nix/store/…-libtool-2.4.7-lib/lib/libltdl.so.7).</p>

  <p>…</p>
</blockquote>

<p>And the external editor doesn’t fire up.</p>

<p>My <code class="language-plaintext highlighter-rouge">ldd --version</code> on my host debian system
shows glibc version 2.37.</p>

<p>Note that gvim is installed through apt,
on the host system (the “optiplex780” which is actually a hp z2 mini g3).
A similar error happens on the T130
when using konsole and vim,
where konsole is installed with nix.</p>

<h2 id="resolution">Resolution</h2>
<p>I’m embarrassed to say I still can’t make heads or tails of how nix works,
much as I’ve tried.
So I don’t know exactly why some part of the process wants the host system to have
what’s presumably the glibc version used to build thunderbird.</p>

<p>I hope eventually I’ll figure this one out,
but the workaround I can live with for now is just to either</p>

<ol>
  <li>not upgrade thunderbird too much (rollback if it uses a glibc version I don’t have yet)</li>
  <li>temporarily live w/o a working external-editor until the debian glibc version catches up (which is iirc what I did the last time this happened). And then 1.</li>
</ol>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>not my email client of choice, but I can’t use mutt with my university gmail, and I get html support this way <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>for absolutely no reason, especially considering the amount of plugins that are always losing version support, and issues like the one in this post <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p>paraphrased from two different pictures of different thunderbird configurations/instances, so the libraries don’t match up, but you get the point. Actually these may be right, but I don’t guarantee it <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[This is the second time I’ve come across this issue, and since it seems I’d forgotten about it after the first time, I’m making a note here.]]></summary></entry><entry><title type="html">xmonad</title><link href="http://localhost:4000/2023/12/20/xmonad.html" rel="alternate" type="text/html" title="xmonad" /><published>2023-12-20T00:00:00-05:00</published><updated>2023-12-20T11:36:46-05:00</updated><id>http://localhost:4000/2023/12/20/xmonad</id><content type="html" xml:base="http://localhost:4000/2023/12/20/xmonad.html"><![CDATA[<p>As with the <a href="{$ link _posts/icecc.md %}">icecc post</a>,
I’m moving <a href="https://xmonad.org/">xmonad</a> from one server to another
for “less downtime”<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<p>I had all the configuration files in <a href="https://github.com/hejohns/.rc">my rc github repo</a>,
but I didn’t document what to actually do, so here we go:</p>

<ul>
  <li>Take a fresh debian container
    <ul>
      <li>You probably want to <code class="language-plaintext highlighter-rouge">adduser hejohns</code> and <code class="language-plaintext highlighter-rouge">apt install sudo</code> and  <code class="language-plaintext highlighter-rouge">adduser hejohns sudo</code>
  since we want to <code class="language-plaintext highlighter-rouge">ssh -X</code> into this box later<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup></li>
    </ul>
  </li>
  <li>Install ghc/cabal w/ ghcup
    <ul>
      <li>See <a href="https://www.haskell.org/ghcup/install/">https://www.haskell.org/ghcup/install/</a></li>
      <li>Install the required system packages (eg curl, libffi-dev, libgmp-dev, …)</li>
      <li>Do their <code class="language-plaintext highlighter-rouge">curl | sh</code> thing</li>
      <li>If this container is just for xmonad, can do a minimal ghcup install</li>
      <li>Can probably just use the default version of ghc.
  You can <code class="language-plaintext highlighter-rouge">ghcup tui</code> to install something newer, but if you pick something too bleeding edge, you might get cabal package constraint errors later</li>
    </ul>
  </li>
  <li>Install xmonad
    <ul>
      <li>See <a href="https://xmonad.org/INSTALL.html">https://xmonad.org/INSTALL.html</a></li>
      <li>Install the required system dependencies (eg libx11-dev, libxss-dev, …)</li>
      <li><code class="language-plaintext highlighter-rouge">cabal update</code></li>
      <li><code class="language-plaintext highlighter-rouge">cabal install --lib xmonad xmonad-contrib</code>
  for the libraries xmonad needs on recompile</li>
      <li><code class="language-plaintext highlighter-rouge">cabal install xmonad</code> for the actual executable</li>
    </ul>
  </li>
  <li>You still need some X infrastructure for xmonad to work
    <ul>
      <li>At the least, you need <code class="language-plaintext highlighter-rouge">apt install x11-utils</code> or else xmonad will error out on some missing executable</li>
      <li>This might be included in <code class="language-plaintext highlighter-rouge">apt install xorg</code></li>
      <li>I don’t know anything about X,
  so I don’t even know if you need an X server or not–
  but I think it didn’t work until I installed one</li>
    </ul>
  </li>
  <li>I’m lazy, so <code class="language-plaintext highlighter-rouge">xmonad --recompile</code> and wait for it to error out b/c of the missing <em>xmonad.hs</em></li>
  <li>This creates <em>~/.config/xmonad</em> for you (for create it yourself)</li>
  <li><code class="language-plaintext highlighter-rouge">git clone</code> the rc repo or equivalent
(for <em>xmonad.hs</em>, <em>.xsession</em>, and associated systemd files)</li>
  <li><code class="language-plaintext highlighter-rouge">cp</code> the <em>xmonad.hs</em> into <em>~/.config/xmonad</em></li>
  <li>Confirm that <code class="language-plaintext highlighter-rouge">xmonad --recompile</code> works now</li>
  <li><code class="language-plaintext highlighter-rouge">xmonad --replace</code> won’t work yet since the X env isn’t setup properly</li>
  <li><code class="language-plaintext highlighter-rouge">cp</code> the systemd files in rc under <em>etc/systemd/user</em> to their respective place in the actual system</li>
  <li>You probably need to <code class="language-plaintext highlighter-rouge">systemctl --user enable</code> the two services</li>
  <li><code class="language-plaintext highlighter-rouge">cp</code> the <em>xsession</em> into <em>~/.xsession</em></li>
  <li>Finally add <code class="language-plaintext highlighter-rouge">(bash ~/.xsession &gt; /dev/null 2&gt;&amp;1 &amp;)</code> or equivalent to your <em>.bashrc</em></li>
</ul>

<h2 id="summary">Summary</h2>
<p>Now, when you’re on your desktop, you can <code class="language-plaintext highlighter-rouge">ssh -X</code> into this box we just setup
and when the bashrc gets sourced on login,
the xsession file will also run and start the systemd user target to fire up
xmonad and xcompmgr.</p>

<p>Oh right, so you probably want to install <code class="language-plaintext highlighter-rouge">xcompmgr</code> as well.
The systemd file in the repo currently assumes it was installed with <code class="language-plaintext highlighter-rouge">nix</code>,
but you can just install it with <code class="language-plaintext highlighter-rouge">apt</code> and change the path.
(I did that just now.)</p>

<p>My desktop is a “dumb” client
(actually, it’s a minimally configured debian + xfce install),
so I can outsource the ghc and xmonad mess to another machine this way.</p>

<p>Why the fuss with systemd?
xmonad used to segfault all the time for some reason,
and having your (remote) window manager suddenly stop really sucks.
A systemd user service that automatically restarts seemed like the right solution.
(When xmonad restarts, all the tilings get reset, but at least a window manager is still running.)</p>

<p>Actually, I don’t think I’ve had xmonad segfault in a long time now,
but the principle stands.</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>I’m reproducing the xmonad setup on the Dell T130 (Pentium G4600) to a container on the Lenovo P720 (dual Xeon 6142s), so I can restart other stuff w/o killing my window manager <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>I did this all as root the first time, and had to do it all over again as my own user since so much of the ghcup and X stuff is per-user. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[As with the icecc post, I’m moving xmonad from one server to another for “less downtime”1. I’m reproducing the xmonad setup on the Dell T130 (Pentium G4600) to a container on the Lenovo P720 (dual Xeon 6142s), so I can restart other stuff w/o killing my window manager &#8617;]]></summary></entry><entry><title type="html">icecc</title><link href="http://localhost:4000/2023/12/19/icecc.html" rel="alternate" type="text/html" title="icecc" /><published>2023-12-19T00:00:00-05:00</published><updated>2023-12-19T23:50:12-05:00</updated><id>http://localhost:4000/2023/12/19/icecc</id><content type="html" xml:base="http://localhost:4000/2023/12/19/icecc.html"><![CDATA[<p>It’s break and I’m cleaning up some computer stuff.</p>

<p>One thing I hadn’t gotten around to was setting up <a href="https://github.com/icecc/icecream">icecc</a>,
which seems like a more automated distcc.
I thought I’d have to write systemd services for <code class="language-plaintext highlighter-rouge">iceccd -d</code> and <code class="language-plaintext highlighter-rouge">icecc-scheduler -d</code> myself,
  but the debian package for icecc already does it for you<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>,
which I was quite pleased about.</p>

<p>So all it takes is</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">apt install icecc</code></li>
  <li><code class="language-plaintext highlighter-rouge">systemctl enable icecc-scheduler</code></li>
</ul>

<p>From what I can tell, <code class="language-plaintext highlighter-rouge">iceccd</code> and <code class="language-plaintext highlighter-rouge">icecc-scheduler</code> automagically form a local (sub)network-wide cluster, which can be viewed with <code class="language-plaintext highlighter-rouge">icecream-sundae</code>.</p>

<p>And of course, as the icecc README says, clients of the cluster need to
<code class="language-plaintext highlighter-rouge">export PATH=/usr/lib/icecc/bin:$PATH</code>.</p>

<p>That’s it.</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>As you can probably guess, we both named them <code class="language-plaintext highlighter-rouge">iceccd.service</code> and <code class="language-plaintext highlighter-rouge">icecc-scheduler.service</code>… <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[It’s break and I’m cleaning up some computer stuff.]]></summary></entry><entry><title type="html">ble.sh</title><link href="http://localhost:4000/2023/11/07/ble-sh.html" rel="alternate" type="text/html" title="ble.sh" /><published>2023-11-07T00:00:00-05:00</published><updated>2023-11-07T01:32:50-05:00</updated><id>http://localhost:4000/2023/11/07/ble-sh</id><content type="html" xml:base="http://localhost:4000/2023/11/07/ble-sh.html"><![CDATA[<p>I just installed <a href="https://github.com/akinomyoga/ble.sh">ble.sh</a>
and wow is this nice.</p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[I just installed ble.sh and wow is this nice.]]></summary></entry><entry><title type="html">Live Reload</title><link href="http://localhost:4000/site-construction/2023/11/06/live-reload.html" rel="alternate" type="text/html" title="Live Reload" /><published>2023-11-06T00:00:00-05:00</published><updated>2023-11-07T01:32:50-05:00</updated><id>http://localhost:4000/site-construction/2023/11/06/live-reload</id><content type="html" xml:base="http://localhost:4000/site-construction/2023/11/06/live-reload.html"><![CDATA[<p>I’ve been writing posts without live reloading/preview
for some reason.
I think <code class="language-plaintext highlighter-rouge">--watch</code> didn’t work or something.</p>

<p>In any case, I just tried this while editing the homepage,
and it’s so nice, I had to make this post.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundler exec jekyll serve -l --lsi -H 192.168.1.100
</code></pre></div></div>

<p>Sometimes I have to manually refresh the browser page though
or else it gets stuck on a blank screen.</p>

<p>(And of course, check out the other <a href="/category/site-construction/">site-construction</a> posts)</p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><category term="site-construction" /><summary type="html"><![CDATA[I’ve been writing posts without live reloading/preview for some reason. I think --watch didn’t work or something.]]></summary></entry><entry><title type="html">coordinating processes</title><link href="http://localhost:4000/2023/10/29/coordinating-processes.html" rel="alternate" type="text/html" title="coordinating processes" /><published>2023-10-29T00:00:00-04:00</published><updated>2023-10-30T06:25:11-04:00</updated><id>http://localhost:4000/2023/10/29/coordinating-processes</id><content type="html" xml:base="http://localhost:4000/2023/10/29/coordinating-processes.html"><![CDATA[<p>This has to be a solved problem?!</p>

<p><a href="https://github.com/hejohns/systemp">repo</a></p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[This has to be a solved problem?!]]></summary></entry><entry><title type="html">tortoise text to speech (and piper)</title><link href="http://localhost:4000/2023/10/10/tortoise-tts.html" rel="alternate" type="text/html" title="tortoise text to speech (and piper)" /><published>2023-10-10T00:00:00-04:00</published><updated>2023-10-11T06:34:15-04:00</updated><id>http://localhost:4000/2023/10/10/tortoise-tts</id><content type="html" xml:base="http://localhost:4000/2023/10/10/tortoise-tts.html"><![CDATA[<h2 id="motivation">Motivation</h2>

<p>I’m getting my butt kicked by EECS 582.
We’re assigned four papers a week to read–
two for Tuesday, two for Thursday–
and it’s just too much to read with attention to detail.
But I don’t think the point <em>is</em> to read every paper in detail.
Or at least that’s not what I really want out of it.</p>

<p>This seems to me an exercise in how to quickly synthesize/accumulate/index
ideas and knowledge,
and how to summarize/distill it quickly.
(The paper reviews used to take me hours, but there just isn’t the time for that.
 I’ve been cramming it into ~45 minutes.)</p>

<p>As such, I’m looking for fast ways to get to the summary,
if that’s the end-goal, so to speak.
There’s some tips and tricks people will tell you when it comes to reading papers,
but I wanted to try something more aggressive.</p>

<h2 id="text-to-speech-tools">text to speech tools</h2>

<p>My eyes were feeling uncomfortable from (I have no medical backing to say this)
all the, well, load, of screen + reading time,
so the natural conclusion was to try <em>listening</em> to papers.</p>

<p>So I copy/pasted the entire paper pdf into a text file,
removed line breaks (eg “libr-\nary”),
and converted the text to audio with a tts tool.</p>

<p>Of course this requires that the paper has signifiant amounts of prose.
The papers we’re reading in 582 do<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> (and more on the effectiveness of the tts tools on papers below), but I have yet to try other areas.</p>

<p>I first tried some online tools, but wasn’t very satisfied.
I’m sure there are good services online though.</p>

<p>In any case, I ended up trying local text to speech tools,
and the two that I got working were:</p>
<ul>
  <li><a href="https://github.com/rhasspy/piper">piper</a></li>
  <li><a href="https://github.com/neonbjb/tortoise-tts">tortoise-tts</a></li>
</ul>

<p>(festival kept crashing, and I think I forgot to try eSpeak-ng.)</p>

<h3 id="piper">piper</h3>
<p>There’s not much to say.
Piper “just works”.
It’s fast– it can stream audio– and sounds good enough to listen to papers.
I’ve been using **cpu inference. I’m not sure if it supports gpu.</p>

<p>This is what I’ve actually been using since tortoise…
didn’t “just work” out of the box.</p>

<p>For some reason, the wav file piper produces isn’t readable on my sony icd,
so I had to ffmpeg it to an mp3.</p>
<h3 id="tortoise">tortoise</h3>
<p>Okay… this is the real reason I wrote this post.</p>

<p>The output quality of tortoise is fantastic.
Yes, it’s slow, but I’m willing to put up with it if it works–
just run it overnight/overnight + a day.
I have yet to really evaluate it as a paper reading tool, because I’ve been so bogged down trying to get it working.</p>

<h4 id="docker">docker</h4>
<p>First, <strong>cpu</strong> only:</p>

<p>The Dockerfile provided works with some small modifications
which others noted in the issue comments and a PR.
So I made a <a href="https://github.com/eecs582-andlars-hasinha-hejohns/tortoise-tts">fork</a>
with those patches.</p>

<p>tortoise hardcodes cuda in some places, so a couple patches are needed, but it does run with only cpu.
Just invoke <code class="language-plaintext highlighter-rouge">docker run</code> without <code class="language-plaintext highlighter-rouge">--gpus all</code>.</p>
<h4 id="gpu">gpu</h4>
<p>I have an nvidia mobile gpu on my desktop (the one from <a href="/2023/05/10/linux-graphics-modules.html">the post about nvidia kernel modules</a>,
so I thought I’d try to see how it compares to cpu tortoise,
which I’d been running on a dual xeon gold 6142.</p>

<p>It became issue after issue.</p>

<p>So first you have to install <code class="language-plaintext highlighter-rouge">nvidia-container-toolkit</code>.
Then when I added <code class="language-plaintext highlighter-rouge">--gpus all</code> back to tortoise’s <code class="language-plaintext highlighter-rouge">docker run</code>,
docker failed to pickup any gpus.</p>

<p>Okay… everything seemed fine with the gpu setup (<code class="language-plaintext highlighter-rouge">nvidia-smi</code> shows output, no systemd nvidia service errors like <a href="/2023/05/10/linux-graphics-modules.html">the post about nvidia kernel modules</a>),
except <code class="language-plaintext highlighter-rouge">nvidia-detect</code> errored out,
complaining about not being able to identify the debian version.</p>

<p>After a display of poor debugging skills, I finally looked at <code class="language-plaintext highlighter-rouge">vim $(which nvidia-detect)</code> and searched for the error message.
It turned out the nvidia-detect script just hardcodes some logic for each debian release,
and looks up the value in <code class="language-plaintext highlighter-rouge">/etc/debian_version</code> to dispatch one of the cases.
If <code class="language-plaintext highlighter-rouge">/etc/debian_version</code> doesn’t match any of the cases,
an error message prints about not being able to identify  the debian version.</p>

<p>Well, I have debian testing on my desktop, with
<code class="language-plaintext highlighter-rouge">cat /etc/debian_version</code><sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup> showing <code class="language-plaintext highlighter-rouge">trixie/sid</code>.
Which just wasn’t a case.
nvidia-detect only hardcoded up to bookworm/debian 12.</p>

<p>My best guess is that the proper fix is to just wait for a newer nvidia-detect.
But I wanted some more immediate closure, so I manually set <code class="language-plaintext highlighter-rouge">/etc/debian_version</code>
to “bookworm/12”, and everyone was happy.</p>

<p>Then docker <code class="language-plaintext highlighter-rouge">--gpus all</code> was finally happy, but tortoise still wasn’t using the gpu.
Another <em>insert search engine</em> adventure later about cuda versions
suggested that I did in fact have a card that supported cuda 12.0,
which should work with tortoise
(I think tortoise itself wanted cuda 11.7, and the Dockerfile wanted the nvidia cuda 12.2 docker image, which may have worked, but I downgraded it to 12.0 to match my host system).</p>

<p>Then the online oracles said to run <code class="language-plaintext highlighter-rouge">python -m torch.utils.collect_env</code>
to see what pytorch was up to.
And indeed, it showed that pytorch was <em>not</em> built with cuda.</p>

<p>I’m not sure why, given that the Dockerfile seems to install pytorch with cuda,
but in any case, there’s no shortage of hacks here, so the oracle said to
just <code class="language-plaintext highlighter-rouge">pip uninstall torch</code> and reinstall it with cuda, as per <a href="https://pytorch.org/get-started/locally/">the pytorch site</a>,
so I did,
and <code class="language-plaintext highlighter-rouge">python -m torch.utils.collect_env</code> changed to show that cuda was enabled.
This is all in a docker container, so I don’t actually mind how much of a hack this is.</p>

<p>With pytorch finally gpu enabled, I fired up tortoise for the nth time,
and it quickly died with a cuda out of memory error.</p>

<p>The cognoscenti may have noticed that I wanted to do this on a quadro M620
with 2GB ram.
Me being an ML-ignorant fool, didn’t think that that was insufficient.</p>

<p>Even with <code class="language-plaintext highlighter-rouge">batch_size = 1</code>, as small as possible<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup>,
tortoise still kept running out of memory.
From what I could find in the issue comments, 4GB is considered a small memory footprint, so it may be that tortoise simply cannot run on 2GB gpu ram.</p>

<p>So I finally got some closure, and four hours less sleep,
but on the plus side,
docker’s quite pleasant to use?</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>figures don’t meaningfully work if they do at all. They usually don’t get copied as text, and if some parts of the figure do, it’s all mangled. That said, captions <em>do</em> work, and are sometimes enough to get the general idea. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>what is this used for?? <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p>I’m assuming that means something to the ML-literate <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[Motivation]]></summary></entry><entry><title type="html">nic bonding</title><link href="http://localhost:4000/2023/08/03/nic-bonding.html" rel="alternate" type="text/html" title="nic bonding" /><published>2023-08-03T00:00:00-04:00</published><updated>2023-08-03T17:41:43-04:00</updated><id>http://localhost:4000/2023/08/03/nic-bonding</id><content type="html" xml:base="http://localhost:4000/2023/08/03/nic-bonding.html"><![CDATA[<ul>
  <li>nmtui</li>
  <li>edit a connection</li>
  <li>add</li>
  <li>type bond</li>
  <li>two slaves
    <ul>
      <li>idk why but it seems like you need to create two entirely new connections</li>
      <li>so deactivate the old connections before activating the bond</li>
    </ul>
  </li>
  <li>set primary device (eg <code class="language-plaintext highlighter-rouge">eno2</code>). This is the mac address used?</li>
  <li>status:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">nmcli con</code></li>
      <li><code class="language-plaintext highlighter-rouge">ip address</code></li>
    </ul>
  </li>
  <li>the mac address changes (not sure why), so you probably have to change the dhcp server settings to statically lease the old ip to the bond mac address</li>
</ul>

<p>redhat has some documentation online</p>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author><summary type="html"><![CDATA[nmtui edit a connection add type bond two slaves idk why but it seems like you need to create two entirely new connections so deactivate the old connections before activating the bond set primary device (eg eno2). This is the mac address used? status: nmcli con ip address the mac address changes (not sure why), so you probably have to change the dhcp server settings to statically lease the old ip to the bond mac address]]></summary></entry><entry><title type="html">book catalogue</title><link href="http://localhost:4000/2023/07/24/book-catalogue.html" rel="alternate" type="text/html" title="book catalogue" /><published>2023-07-24T00:00:00-04:00</published><updated>2023-09-30T14:55:08-04:00</updated><id>http://localhost:4000/2023/07/24/book-catalogue</id><content type="html" xml:base="http://localhost:4000/2023/07/24/book-catalogue.html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#logic" id="markdown-toc-logic">logic</a>    <ul>
      <li><a href="#introductory-textbooks" id="markdown-toc-introductory-textbooks">introductory textbooks</a></li>
      <li><a href="#monographs" id="markdown-toc-monographs">monographs</a></li>
      <li><a href="#editorials-and-proceedings" id="markdown-toc-editorials-and-proceedings">editorials and proceedings</a></li>
      <li><a href="#misc" id="markdown-toc-misc">misc</a></li>
    </ul>
  </li>
  <li><a href="#computer-science" id="markdown-toc-computer-science">computer science</a>    <ul>
      <li><a href="#programming-languages" id="markdown-toc-programming-languages">programming languages</a></li>
      <li><a href="#other" id="markdown-toc-other">other</a></li>
    </ul>
  </li>
  <li><a href="#novels-and-related" id="markdown-toc-novels-and-related">novels and related</a></li>
  <li><a href="#wishlist" id="markdown-toc-wishlist">wishlist</a></li>
</ul>

<p>This evening, I made my largest single import of books to date.
A certain logician is moving to another university– upwards in the academic food chain–
and offered up some of their books for grabs.
I thought I should catalogue the lot, both for my own sake, and as a way to increase their utilization.
Personal libraries are great, but something is quite sad when you think about a book’s realized reading time v. how often it just sits on the shelf.
Or in my case, a box.</p>

<p>Extending this to my current collection, the below is a best effort catalogue of what I have.
Any listing is loanable– just ask.</p>

<p>Each section is roughly in decreasing order of rank, which is an opaque combination of whether I’ve read it, enjoyment, perceived reputation/reverence/significance, etc.</p>

<h2 id="logic">logic</h2>
<h3 id="introductory-textbooks">introductory textbooks</h3>
<ul>
  <li>set theory?</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Shoenfield</td>
          <td>Mathematical Logic</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Chang, Keisler</td>
          <td>Model Theory</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Mendelson</td>
          <td>Introduction to Mathematical Logic</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Hinman</td>
          <td>Fundamentals of Mathematical Logic</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Avigad</td>
          <td>Mathematical Logic and Computation</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Takeuti</td>
          <td>Proof Theory</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>phil?
    <h3 id="monographs">monographs</h3>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Kleene, Vesley</td>
          <td>The Foundation of Intuitionistic Mathematics</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Hinman</td>
          <td>Recursion-Theoretic Hierarchies</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Buss | Bounded Arithmetic
    <h3 id="editorials-and-proceedings">editorials and proceedings</h3>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>van Heijenoort</td>
          <td>From Frege to Gödel</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Heyting</td>
          <td>Constructivity in Mathematics</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Proceedings of the Herbrand Symposium Logic Colloquium ‘81
    <h3 id="misc">misc</h3>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Menzler-Trott</td>
          <td>Logic’s Lost Genius: The life of Gerhard Gentzen</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h2 id="computer-science">computer science</h2>
<h3 id="programming-languages">programming languages</h3>
<ul>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Harper</td>
          <td>Practical Foundations for Programming Languages</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Pierce | Advanced Types and Programming Languages
    <h3 id="other">other</h3>
  </li>
  <li>OSTEP</li>
</ul>

<h2 id="novels-and-related">novels and related</h2>
<ul>
  <li>tanizaki</li>
  <li>childhood years</li>
  <li>dazai</li>
</ul>

<h2 id="wishlist">wishlist</h2>
<p>ie books that I’ve read small bits of and are just so so good</p>

<ul>
  <li>Soare’s computability theory book</li>
  <li>Marker’s model theory book</li>
</ul>]]></content><author><name>Johnson He</name><email>(hejohns)α(umich)δ(edu)</email></author></entry></feed>